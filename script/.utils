#!/bin/bash
#
# Punica - LwM2M server with REST API
# Copyright (C) 2018 8devices
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

echo_stderr () {
    echo "$@" >&2
}

update_repositories () {
    if which apt-get > /dev/null; then
        sudo apt-get update -qq
    elif which rpm > /dev/null; then
        echo_stderr "RPM is not supported yet!"
        return 1
    elif which opkg > /dev/null; then
        echo_stderr "OPKG is not supported yet!"
        return 1
    elif which brew > /dev/null; then
        echo_stderr "BREW is not supported yet!"
        return 1
    else
        echo_stderr "Unknown package manager! (not supported yet)"
        return 1
    fi

    return 0
}

install_software () {
    if [ -z "$1" ]; then
        echo "Software name argument is missing or is invalid!"
        return 1
    fi

    local software="$1"
    echo "      Installing ${software}..."
    if which apt-get > /dev/null; then
        eval "sudo apt-get install -yqq ${software}"
    elif which rpm > /dev/null; then
        echo_stderr "RPM is not supported yet!"
        return 1
    elif which opkg > /dev/null; then
        echo_stderr "OPKG is not supported yet!"
        return 1
    elif which brew > /dev/null; then
        echo_stderr "BREW is not supported yet!"
        return 1
    else
        echo_stderr "Unknown package manager! (not supported yet)"
        return 1
    fi

    return $?
}

install_software_if_not_found () {
    if [ -z "$1" ]; then
        echo "Software name argument is missing or is invalid!"
        return 1
    fi
    local software="$1"

    echo "    - Looking for $software..."
    command -v ${software} > /dev/null || install_software "${software}" || (
        (>&2 echo "Failed to install software: \"${software}\"!")
        return 1
    )
    return 0
}

install_software_array_if_not_found () {
    local software_array=("$@")
    for software in "${software_array[@]}";
    do
        install_software_if_not_found "${software}"
    done
}

export -f echo_stderr
export -f update_repositories
export -f install_software
export -f install_software_if_not_found
export -f install_software_array_if_not_found
